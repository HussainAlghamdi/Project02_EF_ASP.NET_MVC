// <auto-generated />
using System;
using GatheringCoffee2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GatheringCoffee2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210605000248_editCoffeeCategoryRelation")]
    partial class editCoffeeCategoryRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GatheringCoffee2.Models.CoffeeCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CoffeeCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hot Coffee"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cold Coffee"
                        });
                });

            modelBuilder.Entity("GatheringCoffee2.Models.CoffeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CoffeeCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeCategoryId");

                    b.HasIndex("OrderId");

                    b.ToTable("Coffee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoffeeCategoryId = 1,
                            Description = "the V60 is one of specialty coffee’s favourite brewing methods. Within 3 minutes, you can brew an incredibly tasty coffee.",
                            Image = "/img/V60.jpeg",
                            Name = "V60",
                            Price = 18f
                        });
                });

            modelBuilder.Entity("GatheringCoffee2.Models.CustomerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNum")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("GatheringCoffee2.Models.OrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Order");
                });

            modelBuilder.Entity("GatheringCoffee2.Models.SweetAndFoodCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SweetAndFoodCategory");
                });

            modelBuilder.Entity("GatheringCoffee2.Models.SweetAndFoodModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SweetAndFoodCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("SweetAndFoodCategoryId")
                        .IsUnique();

                    b.ToTable("SweetAndFood");
                });

            modelBuilder.Entity("GatheringCoffee2.Models.CoffeeModel", b =>
                {
                    b.HasOne("GatheringCoffee2.Models.CoffeeCategoryModel", "CoffeeCategory")
                        .WithMany("Coffee")
                        .HasForeignKey("CoffeeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GatheringCoffee2.Models.OrderModel", "Order")
                        .WithMany("Coffee")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("GatheringCoffee2.Models.OrderModel", b =>
                {
                    b.HasOne("GatheringCoffee2.Models.CustomerModel", "Customer")
                        .WithOne("Order")
                        .HasForeignKey("GatheringCoffee2.Models.OrderModel", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GatheringCoffee2.Models.SweetAndFoodModel", b =>
                {
                    b.HasOne("GatheringCoffee2.Models.OrderModel", "Order")
                        .WithMany("SweetAndFood")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GatheringCoffee2.Models.SweetAndFoodCategoryModel", "SweetAndFoodCategory")
                        .WithOne("SweetAndFood")
                        .HasForeignKey("GatheringCoffee2.Models.SweetAndFoodModel", "SweetAndFoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
